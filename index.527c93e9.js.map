{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n// 'use strict';\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        if (initialState.length === 4 && initialState.every(function(row) {\n            return row.length === 4;\n        })) {\n            this.initialState = initialState;\n            this.restart();\n        } else throw new Error(\"Initial state is not valid!\");\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status === \"playing\") {\n                    var resultState = this.state.map(function(arr) {\n                        return _this.merge(arr, 0);\n                    });\n                    this.handleMove(resultState);\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status === \"playing\") {\n                    var resultState = this.state.map(function(arr) {\n                        return _this.merge(arr, 1);\n                    });\n                    this.handleMove(resultState);\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.status === \"playing\") {\n                    var rotatedState = this.rotateMatrix(this.state, 1);\n                    var resultState = rotatedState.map(function(row) {\n                        return _this.merge(row, 1);\n                    });\n                    var finalState = this.rotateMatrix(resultState, 0);\n                    this.handleMove(finalState);\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.status === \"playing\") {\n                    var rotatedState = this.rotateMatrix(this.state, 1);\n                    var resultState = rotatedState.map(function(row) {\n                        return _this.merge(row, 0);\n                    });\n                    var finalState = this.rotateMatrix(resultState, 0);\n                    this.handleMove(finalState);\n                }\n            }\n        },\n        {\n            key: \"handleMove\",\n            value: function handleMove(newState) {\n                if (this.isStateDifferent(newState)) {\n                    this.state = newState;\n                    this.firstMoveMade = true;\n                    this.putNewNumber();\n                    if (this.isGameOver()) this.status = \"lose\";\n                    else if (this.isGameWon()) this.status = \"win\";\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.restart();\n                this.status = \"playing\";\n                this.putNewNumber();\n                this.putNewNumber();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.cloneState(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n                this.firstMoveMade = false;\n            }\n        },\n        {\n            key: \"cloneState\",\n            value: function cloneState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"isStateDifferent\",\n            value: function isStateDifferent(newState) {\n                return JSON.stringify(this.state) !== JSON.stringify(newState);\n            }\n        },\n        {\n            key: \"getFirstMoveMade\",\n            value: function getFirstMoveMade() {\n                return this.firstMoveMade;\n            }\n        },\n        {\n            key: \"getAvailableCell\",\n            value: function getAvailableCell() {\n                var cells = [];\n                this.state.forEach(function(row, y) {\n                    row.forEach(function(value, x) {\n                        if (!value) cells.push({\n                            x: x,\n                            y: y\n                        });\n                    });\n                });\n                return cells;\n            }\n        },\n        {\n            key: \"generateNumber\",\n            value: function generateNumber() {\n                return Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"putNewNumber\",\n            value: function putNewNumber() {\n                var availableCells = this.getAvailableCell();\n                if (availableCells.length > 0) {\n                    var _availableCells_Math_floor = availableCells[Math.floor(Math.random() * availableCells.length)], x = _availableCells_Math_floor.x, y = _availableCells_Math_floor.y;\n                    this.state[y][x] = this.generateNumber();\n                }\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                var _this = this;\n                if (this.getAvailableCell().length === 0) {\n                    var directions = [\n                        function() {\n                            return _this.testMove(_this.moveLeft.bind(_this));\n                        },\n                        function() {\n                            return _this.testMove(_this.moveRight.bind(_this));\n                        },\n                        function() {\n                            return _this.testMove(_this.moveUp.bind(_this));\n                        },\n                        function() {\n                            return _this.testMove(_this.moveDown.bind(_this));\n                        }\n                    ];\n                    return directions.every(function(test) {\n                        return !test();\n                    });\n                }\n                return false;\n            }\n        },\n        {\n            key: \"testMove\",\n            value: function testMove(moveFunction) {\n                var originalState = this.cloneState(this.state);\n                moveFunction();\n                var moved = this.isStateDifferent(originalState);\n                this.state = originalState;\n                return moved;\n            }\n        },\n        {\n            key: \"isGameWon\",\n            value: function isGameWon() {\n                return this.state.some(function(row) {\n                    return row.some(function(cell) {\n                        return cell === 2048;\n                    });\n                });\n            }\n        },\n        {\n            key: \"rotateMatrix\",\n            value: function rotateMatrix(matrix, clockwise) {\n                var N = matrix.length;\n                var result = Array.from({\n                    length: N\n                }, function() {\n                    return Array(N).fill(0);\n                });\n                if (clockwise) {\n                    for(var i = 0; i < N; i++)for(var j = 0; j < N; j++)result[j][N - 1 - i] = matrix[i][j];\n                } else {\n                    for(var i1 = 0; i1 < N; i1++)for(var j1 = 0; j1 < N; j1++)result[N - 1 - j1][i1] = matrix[i1][j1];\n                }\n                return result;\n            }\n        },\n        {\n            key: \"merge\",\n            value: function merge(arr, direction) {\n                var input = direction ? (0, $227c6742e0ff6f82$export$71511d61b312f219)(arr).reverse() : (0, $227c6742e0ff6f82$export$71511d61b312f219)(arr);\n                var merged = [];\n                var score = 0;\n                var filtered = input.filter(function(x) {\n                    return x !== 0;\n                });\n                for(var i = 0; i < filtered.length; i++)if (filtered[i] === filtered[i + 1]) {\n                    merged.push(filtered[i] * 2);\n                    score += filtered[i] * 2;\n                    i++;\n                } else merged.push(filtered[i]);\n                while(merged.length < arr.length)merged.push(0);\n                this.score += score;\n                return direction ? merged.reverse() : merged;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nfunction $197cd56b15c33885$var$updateTable(state) {\n    var fieldRows = document.querySelectorAll(\".field-row\");\n    fieldRows.forEach(function(rowElement, rowIndex) {\n        var rowState = state[rowIndex];\n        rowState.forEach(function(cellState, columnIndex) {\n            var cellElement = rowElement.children[columnIndex];\n            cellElement.className = \"field-cell field-cell--\".concat(cellState);\n            cellElement.innerText = cellState > 0 ? cellState : \"\";\n            if (cellState > 0) {\n                cellElement.classList.add(\"merge\");\n                setTimeout(function() {\n                    return cellElement.classList.remove(\"merge\");\n                }, 600);\n            }\n        });\n    });\n}\nfunction $197cd56b15c33885$var$updateScore(score) {\n    document.querySelector(\".game-score\").innerText = score;\n}\nfunction $197cd56b15c33885$var$updateButton(firstMoveMade) {\n    if (firstMoveMade) {\n        $197cd56b15c33885$var$button.className = \"button restart\";\n        $197cd56b15c33885$var$button.innerText = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$button.className = \"button start\";\n        $197cd56b15c33885$var$button.innerText = \"Start\";\n    }\n}\nfunction $197cd56b15c33885$var$updateMessage(gameStatus) {\n    var messageClasses = {\n        idle: \"message-start\",\n        win: \"message-win\",\n        lose: \"message-lose\"\n    };\n    document.querySelectorAll(\".message\").forEach(function(message) {\n        message.classList.add(\"hidden\");\n    });\n    var messageClass = messageClasses[gameStatus];\n    if (messageClass) document.querySelector(\".\".concat(messageClass)).classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$update() {\n    $197cd56b15c33885$var$updateTable($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$updateScore($197cd56b15c33885$var$game.getScore());\n    $197cd56b15c33885$var$updateButton($197cd56b15c33885$var$game.getFirstMoveMade());\n    $197cd56b15c33885$var$updateMessage($197cd56b15c33885$var$game.getStatus());\n}\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    switch($197cd56b15c33885$var$button.innerText){\n        case \"Start\":\n            $197cd56b15c33885$var$game.start();\n            break;\n        case \"Restart\":\n            $197cd56b15c33885$var$game.restart();\n    }\n    $197cd56b15c33885$var$update();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    var actions = {\n        ArrowUp: function() {\n            return $197cd56b15c33885$var$game.moveUp();\n        },\n        ArrowRight: function() {\n            return $197cd56b15c33885$var$game.moveRight();\n        },\n        ArrowDown: function() {\n            return $197cd56b15c33885$var$game.moveDown();\n        },\n        ArrowLeft: function() {\n            return $197cd56b15c33885$var$game.moveLeft();\n        }\n    };\n    var action = actions[e.key];\n    if (action) {\n        e.preventDefault();\n        action();\n    }\n    $197cd56b15c33885$var$update();\n});\n\n})();\n//# sourceMappingURL=index.527c93e9.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\nfunction updateTable(state) {\n  const fieldRows = document.querySelectorAll('.field-row');\n\n  fieldRows.forEach((rowElement, rowIndex) => {\n    const rowState = state[rowIndex];\n\n    rowState.forEach((cellState, columnIndex) => {\n      const cellElement = rowElement.children[columnIndex];\n\n      cellElement.className = `field-cell field-cell--${cellState}`;\n      cellElement.innerText = cellState > 0 ? cellState : '';\n\n      if (cellState > 0) {\n        cellElement.classList.add('merge');\n\n        setTimeout(() => cellElement.classList.remove('merge'), 600);\n      }\n    });\n  });\n}\n\nfunction updateScore(score) {\n  document.querySelector('.game-score').innerText = score;\n}\n\nfunction updateButton(firstMoveMade) {\n  if (firstMoveMade) {\n    button.className = 'button restart';\n    button.innerText = 'Restart';\n  } else {\n    button.className = 'button start';\n    button.innerText = 'Start';\n  }\n}\n\nfunction updateMessage(gameStatus) {\n  const messageClasses = {\n    idle: 'message-start',\n    win: 'message-win',\n    lose: 'message-lose',\n  };\n\n  document.querySelectorAll('.message').forEach((message) => {\n    message.classList.add('hidden');\n  });\n\n  const messageClass = messageClasses[gameStatus];\n\n  if (messageClass) {\n    document.querySelector(`.${messageClass}`).classList.remove('hidden');\n  }\n}\n\nfunction update() {\n  updateTable(game.getState());\n  updateScore(game.getScore());\n  updateButton(game.getFirstMoveMade());\n  updateMessage(game.getStatus());\n}\n\nconst button = document.querySelector('.button');\n\nbutton.addEventListener('click', () => {\n  switch (button.innerText) {\n    case 'Start':\n      game.start();\n      break;\n    case 'Restart':\n      game.restart();\n  }\n\n  update();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  const actions = {\n    ArrowUp: () => game.moveUp(),\n    ArrowRight: () => game.moveRight(),\n    ArrowDown: () => game.moveDown(),\n    ArrowLeft: () => game.moveLeft(),\n  };\n\n  const action = actions[e.key];\n\n  if (action) {\n    e.preventDefault();\n    action();\n  }\n\n  update();\n});\n","// 'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    if (\n      initialState.length === 4 &&\n      initialState.every((row) => row.length === 4)\n    ) {\n      this.initialState = initialState;\n      this.restart();\n    } else {\n      throw new Error('Initial state is not valid!');\n    }\n  }\n\n  moveLeft() {\n    if (this.status === 'playing') {\n      const resultState = this.state.map((arr) => this.merge(arr, 0));\n      this.handleMove(resultState);\n    }\n  }\n\n  moveRight() {\n    if (this.status === 'playing') {\n      const resultState = this.state.map((arr) => this.merge(arr, 1));\n      this.handleMove(resultState);\n    }\n  }\n\n  moveUp() {\n    if (this.status === 'playing') {\n      const rotatedState = this.rotateMatrix(this.state, 1);\n      const resultState = rotatedState.map((row) => this.merge(row, 1));\n      const finalState = this.rotateMatrix(resultState, 0);\n      this.handleMove(finalState);\n    }\n  }\n\n  moveDown() {\n    if (this.status === 'playing') {\n      const rotatedState = this.rotateMatrix(this.state, 1);\n      const resultState = rotatedState.map((row) => this.merge(row, 0));\n      const finalState = this.rotateMatrix(resultState, 0);\n      this.handleMove(finalState);\n    }\n  }\n\n  handleMove(newState) {\n    if (this.isStateDifferent(newState)) {\n      this.state = newState;\n      this.firstMoveMade = true;\n      this.putNewNumber();\n\n      if (this.isGameOver()) {\n        this.status = 'lose';\n      } else if (this.isGameWon()) {\n        this.status = 'win';\n      }\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.restart();\n    this.status = 'playing';\n    this.putNewNumber();\n    this.putNewNumber();\n  }\n\n  restart() {\n    this.state = this.cloneState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n    this.firstMoveMade = false;\n  }\n\n  cloneState(state) {\n    return state.map(row => [...row]);\n  }\n\n  isStateDifferent(newState) {\n    return JSON.stringify(this.state) !== JSON.stringify(newState);\n  }\n\n  getFirstMoveMade() {\n    return this.firstMoveMade;\n  }\n\n  getAvailableCell() {\n    const cells = [];\n    this.state.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (!value) {\n          cells.push({ x, y });\n        }\n      });\n    });\n    return cells;\n  }\n\n  generateNumber() {\n    return Math.random() < 0.9 ? 2 : 4;\n  }\n\n  putNewNumber() {\n    const availableCells = this.getAvailableCell();\n    if (availableCells.length > 0) {\n      const { x, y } = availableCells[Math.floor(Math.random() * availableCells.length)];\n      this.state[y][x] = this.generateNumber();\n    }\n  }\n\n  isGameOver() {\n    if (this.getAvailableCell().length === 0) {\n      const directions = [\n        () => this.testMove(this.moveLeft.bind(this)),\n        () => this.testMove(this.moveRight.bind(this)),\n        () => this.testMove(this.moveUp.bind(this)),\n        () => this.testMove(this.moveDown.bind(this))\n      ];\n      return directions.every(test => !test());\n    }\n    return false;\n  }\n\n  testMove(moveFunction) {\n    const originalState = this.cloneState(this.state);\n    moveFunction();\n    const moved = this.isStateDifferent(originalState);\n    this.state = originalState;\n    return moved;\n  }\n\n  isGameWon() {\n    return this.state.some(row => row.some(cell => cell === 2048));\n  }\n\n  rotateMatrix(matrix, clockwise) {\n    const N = matrix.length;\n    const result = Array.from({ length: N }, () => Array(N).fill(0));\n\n    if (clockwise) {\n      for (let i = 0; i < N; i++) {\n        for (let j = 0; j < N; j++) {\n          result[j][N - 1 - i] = matrix[i][j];\n        }\n      }\n    } else {\n      for (let i = 0; i < N; i++) {\n        for (let j = 0; j < N; j++) {\n          result[N - 1 - j][i] = matrix[i][j];\n        }\n      }\n    }\n    return result;\n  }\n\n  merge(arr, direction) {\n    const input = direction ? [...arr].reverse() : [...arr];\n    const merged = [];\n    let score = 0;\n\n    const filtered = input.filter(x => x !== 0);\n\n    for (let i = 0; i < filtered.length; i++) {\n      if (filtered[i] === filtered[i + 1]) {\n        merged.push(filtered[i] * 2);\n        score += filtered[i] * 2;\n        i++;\n      } else {\n        merged.push(filtered[i]);\n      }\n    }\n\n    while (merged.length < arr.length) {\n      merged.push(0);\n    }\n\n    this.score += score;\n    return direction ? merged.reverse() : merged;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","every","row","restart","Error","key","value","_this","status","resultState","state","map","merge","handleMove","rotatedState","rotateMatrix","finalState","newState","isStateDifferent","firstMoveMade","putNewNumber","isGameOver","isGameWon","score","cloneState","JSON","stringify","cells","forEach","y","x","push","Math","random","availableCells","getAvailableCell","_availableCells_Math_floor","floor","generateNumber","directions","testMove","moveLeft","bind","moveRight","moveUp","moveDown","moveFunction","originalState","moved","some","cell","matrix","clockwise","N","result","fill","j","i1","j1","direction","input","reverse","merged","filtered","filter","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$update","gameStatus","messageClass","getState","fieldRows","document","querySelectorAll","rowElement","rowIndex","rowState","cellState","columnIndex","cellElement","children","className","concat","innerText","classList","add","setTimeout","remove","getScore","querySelector","getFirstMoveMade","$197cd56b15c33885$var$button","getStatus","message","messageClasses","idle","win","lose","addEventListener","start","e","action","actions","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","preventDefault"],"version":3,"file":"index.527c93e9.js.map"}